{"remainingRequest":"D:\\github\\vuepress-blog-starter\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\github\\vuepress-blog-starter\\node_modules\\vuepress-plugin-cursor-effects\\bin\\assets\\js\\boom.js","dependencies":[{"path":"D:\\github\\vuepress-blog-starter\\node_modules\\vuepress-plugin-cursor-effects\\bin\\assets\\js\\boom.js","mtime":1630813244212},{"path":"D:\\github\\vuepress-blog-starter\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1630692538784},{"path":"D:\\github\\vuepress-blog-starter\\node_modules\\babel-loader\\lib\\index.js","mtime":1630692538759}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}